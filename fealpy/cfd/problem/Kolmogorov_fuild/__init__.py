from typing import Protocol, Sequence, TypeVar
from ...backend import TensorLike

class ParabolicPDEDataProtocol(Protocol):
    def geo_dimension(self) -> int: ...
    def domain(self) -> Sequence[float]: ...
    def solution(self, p: TensorLike, t: float) -> TensorLike: ...
    def gradient(self, p: TensorLike, t: float) -> TensorLike: ...
    def source(self, p: TensorLike, t: float) -> TensorLike: ...
    def dirichlet(self, p: TensorLike, t: float) -> TensorLike: ...
    def is_dirichlet_boundary(self, p: TensorLike) -> TensorLike: ...

ParabolicPDEDataT = TypeVar('ParabolicPDEDataT', bound=ParabolicPDEDataProtocol)

DATA_TABLE = {
    # example name: (file_name, class_name)
    "sinexp": ("sin_exp_data_1d", "SinExpData1D"),
    "sinyexp": ("siny_exp_data_2d", "SinyExpData2D"),
    "sinsinexp": ("sin_sin_exp_data_3d", "SinSinExpData3D"),

}
